services:
  # ðŸ‘¤ Microservicio de usuarios (Reactivo)
  user-service:
    image: nicomoralesdssal/user-service:1.0
    container_name: user-service
    restart: always
    depends_on:
      - postgres-userdb
    env_file: # <--- Â¡AGREGA ESTO!
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_R2DBC_URL=r2dbc:postgresql://${USER_DB_HOST}:${DB_PORT}/${USER_DB_NAME}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    command: ["/bin/bash", "-c", "sleep 10 && java -jar app.jar"]

  # ðŸ“… Microservicio de citas (Reactivo)
  appointments-service:
    image: nicomoralesdssal/appointments-service:1.0
    container_name: appointments-service
    restart: always
    depends_on:
      - postgres-appointmentsdb
    env_file: # <--- Â¡AGREGA ESTO!
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8082:8082"
    networks:
      - microservices-net
    command: ["/bin/bash", "-c", "sleep 10 && java -jar app.jar"]

  # ðŸšª API Gateway
  gateway:
    image: tu_usuario_docker/api-gateway:1.0
    container_name: gateway
    restart: always
    depends_on:
      - user-service
      - appointments-service
    ports:
      - "8080:8080"
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: overlay
